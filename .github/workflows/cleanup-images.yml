name: Cleanup Container Images

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no deletions)'
        required: false
        default: true
        type: boolean
      days_to_keep:
        description: 'Keep images newer than X days'
        required: false
        default: '7'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  cleanup-test-images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Cleanup old test and PR images
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: ${{ github.repository_owner }}
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          image-names: ssh_test
          image-tags: "test* *-test pr-* main-test develop-test"
          tag-selection: tagged
          cut-off: ${{ github.event.inputs.days_to_keep || '3' }}d
          dry-run: ${{ github.event.inputs.dry_run || false }}

  cleanup-date-based-images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Cleanup old date-based images
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: ${{ github.repository_owner }}
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          image-names: ssh_test
          # Match YYYYMMDD pattern - keep latest 5
          image-tags: "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]*"
          tag-selection: tagged
          keep-n-most-recent: 5
          cut-off: ${{ github.event.inputs.days_to_keep || '7' }}d
          dry-run: ${{ github.event.inputs.dry_run || false }}

  cleanup-untagged:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Delete all untagged versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: ssh_test
          package-type: container
          delete-only-untagged-versions: true
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  cleanup-pr-closed:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Delete PR-specific images
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: ${{ github.repository_owner }}
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          image-names: ssh_test
          image-tags: "pr-${{ github.event.pull_request.number }}*"
          tag-selection: tagged
          cut-off: 1h  # Delete immediately
          dry-run: false  # Always delete on PR close

  report:
    needs: [cleanup-test-images, cleanup-date-based-images, cleanup-untagged]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Cleanup Summary
        run: |
          echo "## Container Image Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Test Images Cleanup | ${{ needs.cleanup-test-images.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Date-based Images Cleanup | ${{ needs.cleanup-date-based-images.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Untagged Images Cleanup | ${{ needs.cleanup-untagged.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "🔍 This was a **dry run** - no images were actually deleted" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Cleanup completed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cleanup Rules:" >> $GITHUB_STEP_SUMMARY
          echo "- Test images older than ${{ github.event.inputs.days_to_keep || '3' }} days" >> $GITHUB_STEP_SUMMARY
          echo "- Date-based images older than ${{ github.event.inputs.days_to_keep || '7' }} days (keeping last 5)" >> $GITHUB_STEP_SUMMARY
          echo "- All untagged images" >> $GITHUB_STEP_SUMMARY
          echo "- PR-specific images when PR is closed" >> $GITHUB_STEP_SUMMARY